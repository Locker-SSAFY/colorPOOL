plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'checkstyle'
}

group = 'com.ssafy.socks'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

checkstyle {
    maxWarnings = 0 // 규칙이 어긋나는 코드가 하나라도 있을 경우 빌드 fail을 내고 싶다면 이 선언을 추가한다.
    configFile = file("${rootDir}/naver-checkstyle-rules.xml")
    configProperties = ["suppressionFile": "${rootDir}/naver-checkstyle-suppressions.xml"]
    toolVersion = "8.24"  // checkstyle 버전 8.24 이상 선언
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    /* spring doc*/
    compile 'org.springdoc:springdoc-openapi-ui:1.2.32'
    /* spring doc*/

    /* jsoup */
    compile group: 'org.jsoup', name: 'jsoup', version: '1.11.3'
    /* jsoup */

    /* selenium */
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '2.41.0'
    /* selenium */

    /* messageSource */
    implementation 'net.rakugakibox.util:yaml-resource-bundle:1.1'
    /* messageSource */

    /* jwt */
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    /* jwt */

    /* gson */
    implementation 'com.google.code.gson:gson'
    /* gson */

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'
}

test {
    useJUnitPlatform()
}
